# Generated by Django 2.0.5 on 2018-11-07 17:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TblCollectionEvent',
            fields=[
                ('collection_event_id', models.CharField(db_column='CollEventID', max_length=45, primary_key=True, serialize=False)),
                ('collection_event_date', models.DateField(blank=True, db_column='CollEventDate')),
                ('description', models.CharField(blank=True, db_column='Description', max_length=100, null=True)),
            ],
            options={
                'db_table': 'tbl_collection_event',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblCollector',
            fields=[
                ('collector_id', models.AutoField(db_column='CollectorID', primary_key=True, serialize=False)),
                ('collector_type', models.CharField(blank=True, db_column='CollectorType', max_length=45, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=100, null=True)),
            ],
            options={
                'db_table': 'tbl_collector',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblCruise',
            fields=[
                ('cruise_id', models.AutoField(db_column='CruiseID', primary_key=True, serialize=False)),
                ('cruise_name', models.CharField(db_column='CruiseName', max_length=45)),
                ('cruise_start', models.DateField(blank=True, db_column='CruiseStart', null=True)),
                ('cruise_end', models.DateField(blank=True, db_column='CruiseEnd', null=True)),
                ('vessel', models.CharField(blank=True, db_column='Vessel', max_length=45, null=True)),
                ('region', models.CharField(blank=True, db_column='Region', max_length=45, null=True)),
                ('chief_scientist', models.CharField(blank=True, db_column='ChiefScientist', max_length=45, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=100, null=True)),
            ],
            options={
                'db_table': 'tbl_cruise',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblEnvironmental',
            fields=[
                ('environmental_id', models.AutoField(db_column='EnvironmentalID', primary_key=True, serialize=False)),
                ('environmental_datetime', models.DateTimeField(blank=True, db_column='DateTime24-GMT', null=True)),
                ('sampler', models.CharField(blank=True, db_column='Sampler', max_length=25, null=True)),
                ('depth_discrete', models.IntegerField(blank=True, db_column='DepthDiscrete', null=True)),
                ('depth_min', models.IntegerField(blank=True, db_column='DepthMin', null=True)),
                ('depth_max', models.IntegerField(blank=True, db_column='DepthMax', null=True)),
                ('latitude', models.DecimalField(blank=True, db_column='Latitude', decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, db_column='Longitude', decimal_places=6, max_digits=9, null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('collection_event_id', models.ForeignKey(db_column='CollEventID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblCollectionEvent')),
            ],
            options={
                'db_table': 'tbl_environmental',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblLab',
            fields=[
                ('lab_id', models.AutoField(db_column='LabID', primary_key=True, serialize=False)),
                ('lab_name', models.CharField(db_column='LabName', max_length=30)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=50, null=True)),
                ('contact_name', models.CharField(blank=True, db_column='ContactName', max_length=30, null=True)),
                ('contact_email', models.CharField(blank=True, db_column='ContactEmail', max_length=30, null=True)),
                ('contact_phone', models.CharField(blank=True, db_column='ContactPhone', max_length=12, null=True)),
            ],
            options={
                'db_table': 'tbl_lab',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblLengthType',
            fields=[
                ('length_type_id', models.AutoField(db_column='LengthTypeID', primary_key=True, serialize=False)),
                ('length_type_label', models.CharField(db_column='LengthTypeLabel', max_length=20)),
            ],
            options={
                'db_table': 'tbl_length type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblLocation',
            fields=[
                ('location_id', models.AutoField(db_column='LocationID', primary_key=True, serialize=False)),
                ('institution', models.CharField(db_column='Institution', max_length=50)),
                ('location', models.CharField(db_column='Location', max_length=50)),
            ],
            options={
                'db_table': 'tbl_location',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblOriginType',
            fields=[
                ('origin_type_id', models.AutoField(db_column='OriginID', primary_key=True, serialize=False)),
                ('origin_type_label', models.CharField(db_column='SubsampleType', max_length=20)),
            ],
            options={
                'db_table': 'tbl_origin_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblResultsBulkStableIsotope',
            fields=[
                ('r6id', models.AutoField(db_column='R6ID', primary_key=True, serialize=False)),
                ('analysis_date', models.DateField(db_column='AnalysisDate')),
                ('analyzed_by', models.CharField(blank=True, db_column='AnalyzedBy', max_length=30, null=True)),
                ('He_dilution', models.CharField(blank=True, db_column='HeDilution', max_length=30, null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('EA_mass_mg', models.FloatField(blank=True, db_column='EA_mass_mg', null=True)),
                ('n_ug', models.FloatField(blank=True, db_column='N_ug', null=True)),
                ('d15n', models.FloatField(blank=True, db_column='d15N', null=True)),
                ('c_ug', models.FloatField(blank=True, db_column='C_ug', null=True)),
                ('d13c', models.FloatField(blank=True, db_column='d13C', null=True)),
                ('acidified', models.BooleanField(db_column='Acidified', default=False)),
                ('molar_CN', models.FloatField(blank=True, db_column='MolarCN', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('replicates', models.BooleanField(db_column='Replicates', default=False)),
            ],
            options={
                'db_table': 'tbl_results_bulk_stable_isotope',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblResultsCompSpecAaIsotope',
            fields=[
                ('r5id', models.AutoField(db_column='R5ID', primary_key=True, serialize=False)),
                ('analysisd_ate', models.DateField(db_column='AnalysisDate')),
                ('run_num', models.CharField(db_column='RunNum', max_length=20)),
                ('amino_acid', models.CharField(blank=True, db_column='AminoAcid', max_length=20, null=True)),
                ('ea_irms', models.FloatField(blank=True, db_column='EA-IRMS', null=True)),
                ('rt', models.FloatField(blank=True, db_column='RT', null=True)),
                ('peak', models.IntegerField(blank=True, db_column='Peak', null=True)),
                ('rt2', models.FloatField(blank=True, db_column='RT2', null=True)),
                ('area', models.FloatField(blank=True, db_column='Area', null=True)),
                ('d15n_un', models.FloatField(blank=True, db_column='d15N_un', null=True)),
                ('d15n_std', models.FloatField(blank=True, db_column='d15N_std', null=True)),
                ('d15n_reg', models.FloatField(blank=True, db_column='d15N_reg', null=True)),
                ('standard', models.CharField(blank=True, db_column='Standard', max_length=30, null=True)),
                ('vial_id', models.CharField(blank=True, db_column='VialID', max_length=20, null=True)),
                ('sample_weight', models.FloatField(blank=True, db_column='SampleWeight', null=True)),
                ('ea_ul', models.IntegerField(blank=True, db_column='EA_uL', null=True)),
                ('injection_volume', models.FloatField(blank=True, db_column='InjectionVolume', null=True)),
            ],
            options={
                'db_table': 'tbl_results_comp_spec_AA_isotope',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblResultsFattyAcid',
            fields=[
                ('r4id', models.AutoField(db_column='R4ID', primary_key=True, serialize=False)),
                ('analysis_date', models.DateField(db_column='AnalysisDate')),
                ('csiro_id', models.TextField(db_column='CSIRO_ID')),
                ('noaa_ll_specimenid', models.TextField(db_column='NOAA_LL_SpecimenID')),
                ('tissue_type', models.CharField(blank=True, db_column='TissueType', max_length=20, null=True)),
                ('tissue_location', models.CharField(blank=True, db_column='TissueLocation', max_length=20, null=True)),
                ('catch_date', models.DateField(blank=True, db_column='CatchDate', null=True)),
                ('fork_length_cm', models.FloatField(blank=True, db_column='Forklength_cm', null=True)),
                ('whole_mass_g', models.FloatField(blank=True, db_column='WholeMass_g', null=True)),
                ('sex', models.CharField(blank=True, db_column='Sex', max_length=1, null=True)),
                ('dry_mass_g', models.FloatField(blank=True, db_column='DryMass_g', null=True)),
                ('capless_vial_and_lipid_g', models.FloatField(blank=True, db_column='CaplessVialAndLipid_g', null=True)),
                ('capless_vial_g', models.FloatField(blank=True, db_column='CaplessVial_g', null=True)),
                ('lipid_mass_g', models.FloatField(blank=True, db_column='LipidMass_g', null=True)),
                ('lipid_mass_mg', models.FloatField(blank=True, db_column='LipidMass_mg', null=True)),
                ('c19_internal_standard_added_ul', models.IntegerField(blank=True, db_column='C19_Internal_Standard_Added_ul', null=True)),
                ('percent_lipid_drywt', models.FloatField(blank=True, db_column='PercentLipid_drywt', null=True)),
                ('methylation_ul', models.IntegerField(blank=True, db_column='Methylation_ul', null=True)),
                ('tl_volume_ul', models.IntegerField(blank=True, db_column='TL_Volume_ul', null=True)),
                ('percent_lipid_drywt_reweigh', models.FloatField(blank=True, db_column='PercentLipid_drywt_reweigh', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
            ],
            options={
                'db_table': 'tbl_results_fattyacid',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblResultsFreezedry',
            fields=[
                ('r3id', models.AutoField(db_column='R3ID', primary_key=True, serialize=False)),
                ('analysis_date', models.DateField(db_column='AnalysisDate')),
                ('family', models.TextField(blank=True, db_column='Family', null=True)),
                ('genus', models.TextField(blank=True, db_column='Genus', null=True)),
                ('species', models.TextField(blank=True, db_column='Species', null=True)),
                ('counts', models.IntegerField(blank=True, db_column='Counts', null=True)),
                ('length1_mm', models.IntegerField(blank=True, db_column='Length1_mm', null=True)),
                ('length2_mm', models.IntegerField(blank=True, db_column='Length2_mm', null=True)),
                ('whole_wet_mass', models.IntegerField(blank=True, db_column='WholeWetMass', null=True)),
                ('wet_remaining', models.TextField(blank=True, db_column='WetRemaining', null=True)),
                ('vessel', models.FloatField(blank=True, db_column='Vessel', null=True)),
                ('vessel_and_wet', models.FloatField(blank=True, db_column='VesselAndWet', null=True)),
                ('vessel_and_dry', models.FloatField(blank=True, db_column='VesselAndDry', null=True)),
                ('percent_water', models.FloatField(blank=True, db_column='PercentWater', null=True)),
                ('dry_tissue', models.FloatField(blank=True, db_column='DryTissue', null=True)),
                ('dry_tissue_type', models.CharField(blank=True, db_column='DryTissueType', max_length=30, null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('length1_type', models.ForeignKey(db_column='Length1_type', max_length=20, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tblresultsfreezedry_L1_type', to='deepseaweb.TblLengthType')),
                ('length2_type', models.ForeignKey(db_column='Length2_type', max_length=20, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tblresultsfreezedry_L2_type', to='deepseaweb.TblLengthType')),
            ],
            options={
                'db_table': 'tbl_results_freezedry',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblResultsMercury1',
            fields=[
                ('r1id', models.AutoField(db_column='R1ID', primary_key=True, serialize=False)),
                ('analysis_date', models.DateField(db_column='AnalysisDate')),
                ('weight', models.FloatField(db_column='Weight')),
                ('height', models.FloatField(db_column='Height')),
                ('hg_ng', models.FloatField(db_column='Hg_ng')),
                ('dryc_ugkg', models.FloatField(db_column='DryC_ugkg')),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
            ],
            options={
                'db_table': 'tbl_results_mercury_1',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblResultsMercury2',
            fields=[
                ('r2id', models.AutoField(db_column='R2ID', primary_key=True, serialize=False)),
                ('analysis_date', models.DateField(db_column='AnalysisDate')),
                ('dry_log_id', models.CharField(blank=True, db_column='DryLogID', max_length=15, null=True)),
                ('aliquot_mass_g', models.FloatField(blank=True, db_column='AliquotMass_g', null=True)),
                ('hg_ugg_wet', models.FloatField(blank=True, db_column='Hg_ugg_wet', null=True)),
                ('batch', models.CharField(blank=True, db_column='Batch', max_length=10, null=True)),
                ('flag', models.TextField(blank=True, db_column='Flag', null=True)),
            ],
            options={
                'db_table': 'tbl_results_mercury_2',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblSample',
            fields=[
                ('sample_id', models.AutoField(db_column='SampleID', primary_key=True, serialize=False)),
                ('AC_sample_id', models.CharField(blank=True, db_column='ACSampleID', max_length=45, null=True)),
                ('origin_id', models.IntegerField(blank=True, db_column='SampleOriginID', default=0, null=True)),
                ('processing_id', models.CharField(blank=True, db_column='ProcessingID', max_length=20, null=True)),
                ('length1_mm', models.FloatField(blank=True, db_column='Length1_MM', null=True)),
                ('length2_mm', models.FloatField(blank=True, db_column='Length2_MM', null=True)),
                ('wet_whole_mass_g', models.FloatField(blank=True, db_column='Wet_Whole_Mass_G', null=True)),
                ('n_individuals', models.IntegerField(db_column='N_Individuals', default=1)),
                ('tissue_type', models.CharField(blank=True, db_column='TissueType', max_length=20, null=True)),
                ('remaining_mass_g', models.FloatField(blank=True, db_column='Remaining_Mass_G', null=True)),
                ('environmental_id', models.ForeignKey(db_column='EnvironmentalID', on_delete=django.db.models.deletion.CASCADE, to='deepseaweb.TblEnvironmental')),
                ('length1_type', models.ForeignKey(db_column='Length1_type', max_length=20, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tblsample_L1_type', to='deepseaweb.TblLengthType')),
                ('length2_type', models.ForeignKey(db_column='Length2_type', max_length=20, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tblsample_L2_type', to='deepseaweb.TblLengthType')),
                ('origin_type', models.ForeignKey(db_column='OriginID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblOriginType')),
            ],
            options={
                'db_table': 'tbl_sample',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblSampleTests',
            fields=[
                ('sample_test_id', models.AutoField(db_column='SampleTestID', primary_key=True, serialize=False)),
                ('result_id', models.IntegerField(blank=True, db_column='ResultID', null=True)),
                ('test_sent', models.DateField(blank=True, db_column='TestSent', null=True)),
                ('result_recd', models.DateField(blank=True, db_column='ResultRecd', null=True)),
                ('qaqc', models.BooleanField(db_column='QAQC', default=False)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('sample_id', models.ForeignKey(db_column='SampleID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblSample')),
            ],
            options={
                'db_table': 'tbl_sample_tests',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblTaxonomy',
            fields=[
                ('taxonomy_id', models.CharField(db_column='TaxonomyID', max_length=45, primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, db_column='Category', max_length=20, null=True)),
                ('animal', models.CharField(blank=True, db_column='Animal', max_length=20, null=True)),
                ('phylum', models.CharField(blank=True, db_column='Phylum', max_length=20, null=True)),
                ('subphylum', models.CharField(blank=True, db_column='Subphylum', max_length=20, null=True)),
                ('class_field', models.CharField(blank=True, db_column='Class', max_length=20, null=True)),
                ('order_field', models.CharField(blank=True, db_column='Order_', max_length=20, null=True)),
                ('suborder', models.CharField(blank=True, db_column='SubOrder', max_length=20, null=True)),
                ('family', models.CharField(blank=True, db_column='Family', max_length=20, null=True)),
                ('genus', models.CharField(blank=True, db_column='Genus', max_length=20, null=True)),
                ('species', models.CharField(blank=True, db_column='Species', max_length=40, null=True)),
            ],
            options={
                'db_table': 'tbl_taxonomy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TblTests',
            fields=[
                ('test_id', models.AutoField(db_column='TestID', primary_key=True, serialize=False)),
                ('test_type', models.CharField(db_column='TestType', max_length=20)),
                ('result_table', models.CharField(db_column='ResultTable', max_length=20)),
                ('lab_id', models.ForeignKey(db_column='LabID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblLab')),
            ],
            options={
                'db_table': 'tbl_tests',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='tblsampletests',
            name='test_id',
            field=models.ForeignKey(db_column='TestID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblTests'),
        ),
        migrations.AddField(
            model_name='tblsample',
            name='taxonomy_id',
            field=models.ForeignKey(db_column='TaxonomyID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblTaxonomy'),
        ),
        migrations.AddField(
            model_name='tblresultsmercury2',
            name='sample_test_id',
            field=models.ForeignKey(db_column='SampleTestID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblSampleTests'),
        ),
        migrations.AddField(
            model_name='tblresultsmercury1',
            name='sample_test_id',
            field=models.ForeignKey(db_column='SampleTestID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblSampleTests'),
        ),
        migrations.AddField(
            model_name='tblresultsfreezedry',
            name='sample_test_id',
            field=models.ForeignKey(db_column='SampleTestID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblSampleTests'),
        ),
        migrations.AddField(
            model_name='tblresultsfattyacid',
            name='sample_test_id',
            field=models.ForeignKey(db_column='SampleTestID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblSampleTests'),
        ),
        migrations.AddField(
            model_name='tblresultscompspecaaisotope',
            name='sample_test_id',
            field=models.ForeignKey(db_column='SampleTestID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblSampleTests'),
        ),
        migrations.AddField(
            model_name='tblresultsbulkstableisotope',
            name='sample_test_id',
            field=models.ForeignKey(db_column='SampleTestID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblSampleTests'),
        ),
        migrations.AddField(
            model_name='tbllocation',
            name='sample_id',
            field=models.ForeignKey(db_column='SampleID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblSample'),
        ),
        migrations.AddField(
            model_name='tblcollectionevent',
            name='collector_id',
            field=models.ForeignKey(db_column='CollectorID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblCollector'),
        ),
        migrations.AddField(
            model_name='tblcollectionevent',
            name='cruise_id',
            field=models.ForeignKey(db_column='CruiseID', on_delete=django.db.models.deletion.DO_NOTHING, to='deepseaweb.TblCruise'),
        ),
    ]
